version: "3.9"

# Shared set of env variables (secret variables are fetched from `.env` file)
x-common-env: &common-env
  environment:
    - DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}

    - RABBITMQ_HOST=rabbitmq
    - RABBITMQ_PORT=5672
    - RABBITMQ_QUEUE_API2INF=api_to_inference
    - RABBITMQ_QUEUE_INF2API=inference_to_api
    - RABBITMQ_LOGS="-"
    - RABBITMQ_LOG_LEVEL=info
    - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}  # .env
    - RABBITMQ_DEFAULT_PASSWORD=${RABBITMQ_DEFAULT_PASSWORD} # .env

    - MINIO_ENDPOINT=minioserver:9000
    - MINIO_BUCKET=mediae # hardcoded for dev purposes, #TODO: get foldernames from usernames
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - MINIO_ROOT_USER=${MINIO_ROOT_USER}
    - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}

    - MH_LOG_LEVEL=error

services:
#============ [MAIN SERVICES] ============#
  api:
    <<: *common-env
    image: ${DOCKERHUB_USERNAME}/bird-sound-classif:api
    ports:
      - "8001:8000"
    depends_on:
      - rabbitmq
      - minioserver
    networks:
      - internal
    command: sh -c "sleep 5 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    restart: always

  inference:
    <<: *common-env
    image: ${DOCKERHUB_USERNAME}/bird-sound-classif:inference
    depends_on:
      - rabbitmq
      - minioserver
    networks:
      - internal
    command: sh -c "sleep 5 && python3 inference/main.py"
    restart: always

#============ [BACKING SERVICES] ============#
  rabbitmq:
    # RabbitMQ: container to container async messenger
    <<: *common-env
    image: rabbitmq:3.9.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal
    restart: always

  minioserver:
    # MinIO: Lightweight AWS S3 local file storage
    <<: *common-env
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    container_name: minio
    command: server /data --console-address ":9001"
    volumes:
      - ./docker/minio/minio_entrypoint.sh:/minio_entrypoint.sh # Init script
      - minio-data:/data
    networks:
      - internal
    entrypoint: /minio_entrypoint.sh
    restart: always

  mailhog:
    # Mailhog: Email testing tool for development
    <<: *common-env
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - internal
    restart: always


#============ [VOLUMES / NETWORKS] ============#
volumes:
  minio-data:

networks:
  internal:
    driver: bridge
